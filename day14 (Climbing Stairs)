//70. Climbing Stairs
// You are climbing a staircase. It takes n steps to reach the top.

// Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

/**
 * @param {number} n
 * @return {number}
 */
var climbStairs = function (n) {
  //check the case if n is 1 or 2
  if (n <= 2) {
    return n
  }

  // Initialize an array to store the number of ways to reach each step
  var dp = new Array(n + 1)

  // Base cases
  dp[1] = 1
  dp[2] = 2

  // Iterate through the rest of the steps and fill the array using the recurrence relation
  for (var i = 3; i <= n; i++) {
    dp[i] = dp[i - 1] + dp[i - 2]
  }

  // The final result is stored in the last element of the array
  return dp[n]
}
