//136. Single Number
// Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.

// You must implement a solution with a linear runtime complexity and use only constant extra space.

/**
 * @param {number[]} nums
 * @return {number}
 */
var singleNumber = function (nums) {
  //create unique set of nums
  const newSet = Array.from(new Set(nums))
  //sum of all
  const sumNums = nums.reduce((prev, cur) => prev + cur, 0)
  //sum of unique set multiply 2
  const sumSetDouble = newSet.reduce((prev, cur) => prev + cur, 0) * 2
  //find out the single value by substract total sums from total of unique set X2
  return sumSetDouble - sumNums
}

//The Set object lets you store unique values of any type, whether primitive values or object references.

//The Array.from() static method creates a new, shallow-copied Array instance from an iterable or array-like object.
//Array.from(arrayLike, mapFn)
