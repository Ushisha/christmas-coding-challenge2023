//36. Valid Sudoku
// Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:

// Each row must contain the digits 1-9 without repetition.
// Each column must contain the digits 1-9 without repetition.
// Each of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without repetition.
// Note:

// A Sudoku board (partially filled) could be valid but is not necessarily solvable.
// Only the filled cells need to be validated according to the mentioned rules.

/**
 * @param {character[][]} board
 * @return {boolean}
 */
var isValidSudoku = function (board) {
  //create a new set object
  const set = new Set()
  //loop through row of the board
  for (let i = 0; i < board.length; i++) {
    //loop through column of the board
    for (let j = 0; j < board[i].length; j++) {
      const cell = board[i][j]
      //check if the cell if empty cell if so execution of the loop with the next iteration
      if (cell === '.') continue
      //determines which row and column of the 3x3 box the element at position,and calculates the index of a 3x3 subgrid (box) in a larger grid
      const boxIndex = 3 * Math.floor(i / 3) + Math.floor(j / 3)
      //assign row ,col,box value
      const row = `row:${i}, value${cell}`
      const col = `col:${j}, value${cell}`
      const box = `box:${boxIndex}, value${cell}`
      //chceck if already exist in set
      if (set.has(row) || set.has(col) || set.has(box)) {
        return false
      }
      set.add(row)
      set.add(col)
      set.add(box)
    }
  }
  return true
}

// Set
//object lets you store unique values of any type, whether primitive values or object references

//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set
